// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v6.30.2
// source: proto/tts.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Provider int32

const (
	Provider_MICROSOFT  Provider = 0
	Provider_VOLCENGINE Provider = 1
	Provider_ALIYUN     Provider = 2
)

// Enum value maps for Provider.
var (
	Provider_name = map[int32]string{
		0: "MICROSOFT",
		1: "VOLCENGINE",
		2: "ALIYUN",
	}
	Provider_value = map[string]int32{
		"MICROSOFT":  0,
		"VOLCENGINE": 1,
		"ALIYUN":     2,
	}
)

func (x Provider) Enum() *Provider {
	p := new(Provider)
	*p = x
	return p
}

func (x Provider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Provider) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_tts_proto_enumTypes[0].Descriptor()
}

func (Provider) Type() protoreflect.EnumType {
	return &file_proto_tts_proto_enumTypes[0]
}

func (x Provider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Provider.Descriptor instead.
func (Provider) EnumDescriptor() ([]byte, []int) {
	return file_proto_tts_proto_rawDescGZIP(), []int{0}
}

// 文本转语音请求
type TextToSpeechRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text     string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`                            // 要转换的文本
	Language string   `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`                    // 语言代码，如 zh-CN, en-US
	VoiceId  string   `protobuf:"bytes,3,opt,name=voice_id,json=voiceId,proto3" json:"voice_id,omitempty"`       // 声音ID
	Speed    float32  `protobuf:"fixed32,4,opt,name=speed,proto3" json:"speed,omitempty"`                        // 语速，范围 0.5-2.0
	Pitch    float32  `protobuf:"fixed32,5,opt,name=pitch,proto3" json:"pitch,omitempty"`                        // 音调，范围 0.5-2.0
	Provider Provider `protobuf:"varint,6,opt,name=provider,proto3,enum=tts.Provider" json:"provider,omitempty"` // 平台，范围
}

func (x *TextToSpeechRequest) Reset() {
	*x = TextToSpeechRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tts_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextToSpeechRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextToSpeechRequest) ProtoMessage() {}

func (x *TextToSpeechRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tts_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextToSpeechRequest.ProtoReflect.Descriptor instead.
func (*TextToSpeechRequest) Descriptor() ([]byte, []int) {
	return file_proto_tts_proto_rawDescGZIP(), []int{0}
}

func (x *TextToSpeechRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TextToSpeechRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *TextToSpeechRequest) GetVoiceId() string {
	if x != nil {
		return x.VoiceId
	}
	return ""
}

func (x *TextToSpeechRequest) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *TextToSpeechRequest) GetPitch() float32 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

func (x *TextToSpeechRequest) GetProvider() Provider {
	if x != nil {
		return x.Provider
	}
	return Provider_MICROSOFT
}

// 文本转语音响应
type TextToSpeechResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AudioData  []byte `protobuf:"bytes,1,opt,name=audio_data,json=audioData,proto3" json:"audio_data,omitempty"`     // 音频数据
	Format     string `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`                            // 音频格式，如 mp3, wav
	SampleRate int32  `protobuf:"varint,3,opt,name=sample_rate,json=sampleRate,proto3" json:"sample_rate,omitempty"` // 采样率
	Channels   int32  `protobuf:"varint,4,opt,name=channels,proto3" json:"channels,omitempty"`                       // 声道数
	IsEnd      bool   `protobuf:"varint,5,opt,name=is_end,json=isEnd,proto3" json:"is_end,omitempty"`
}

func (x *TextToSpeechResponse) Reset() {
	*x = TextToSpeechResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tts_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextToSpeechResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextToSpeechResponse) ProtoMessage() {}

func (x *TextToSpeechResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tts_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextToSpeechResponse.ProtoReflect.Descriptor instead.
func (*TextToSpeechResponse) Descriptor() ([]byte, []int) {
	return file_proto_tts_proto_rawDescGZIP(), []int{1}
}

func (x *TextToSpeechResponse) GetAudioData() []byte {
	if x != nil {
		return x.AudioData
	}
	return nil
}

func (x *TextToSpeechResponse) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *TextToSpeechResponse) GetSampleRate() int32 {
	if x != nil {
		return x.SampleRate
	}
	return 0
}

func (x *TextToSpeechResponse) GetChannels() int32 {
	if x != nil {
		return x.Channels
	}
	return 0
}

func (x *TextToSpeechResponse) GetIsEnd() bool {
	if x != nil {
		return x.IsEnd
	}
	return false
}

// 获取语音列表请求
type VoicesListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider Provider `protobuf:"varint,1,opt,name=provider,proto3,enum=tts.Provider" json:"provider,omitempty"` // 平台，范围
}

func (x *VoicesListRequest) Reset() {
	*x = VoicesListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tts_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoicesListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoicesListRequest) ProtoMessage() {}

func (x *VoicesListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tts_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoicesListRequest.ProtoReflect.Descriptor instead.
func (*VoicesListRequest) Descriptor() ([]byte, []int) {
	return file_proto_tts_proto_rawDescGZIP(), []int{2}
}

func (x *VoicesListRequest) GetProvider() Provider {
	if x != nil {
		return x.Provider
	}
	return Provider_MICROSOFT
}

// 获取语音列表响应
type VoicesListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voices []*Voice `protobuf:"bytes,1,rep,name=voices,proto3" json:"voices,omitempty"` // 语音列表
}

func (x *VoicesListResponse) Reset() {
	*x = VoicesListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tts_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoicesListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoicesListResponse) ProtoMessage() {}

func (x *VoicesListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tts_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoicesListResponse.ProtoReflect.Descriptor instead.
func (*VoicesListResponse) Descriptor() ([]byte, []int) {
	return file_proto_tts_proto_rawDescGZIP(), []int{3}
}

func (x *VoicesListResponse) GetVoices() []*Voice {
	if x != nil {
		return x.Voices
	}
	return nil
}

// 语音
type Voice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoiceId   string `protobuf:"bytes,1,opt,name=voice_id,json=voiceId,proto3" json:"voice_id,omitempty"`       // 声音ID
	VoiceName string `protobuf:"bytes,2,opt,name=voice_name,json=voiceName,proto3" json:"voice_name,omitempty"` // 声音名称
}

func (x *Voice) Reset() {
	*x = Voice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tts_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Voice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Voice) ProtoMessage() {}

func (x *Voice) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tts_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Voice.ProtoReflect.Descriptor instead.
func (*Voice) Descriptor() ([]byte, []int) {
	return file_proto_tts_proto_rawDescGZIP(), []int{4}
}

func (x *Voice) GetVoiceId() string {
	if x != nil {
		return x.VoiceId
	}
	return ""
}

func (x *Voice) GetVoiceName() string {
	if x != nil {
		return x.VoiceName
	}
	return ""
}

var File_proto_tts_proto protoreflect.FileDescriptor

var file_proto_tts_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x74, 0x74, 0x73, 0x22, 0xb7, 0x01, 0x0a, 0x13, 0x54, 0x65, 0x78, 0x74, 0x54,
	0x6f, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x70, 0x69, 0x74, 0x63, 0x68, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x74, 0x74, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x22, 0xa1, 0x01, 0x0a, 0x14, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x53, 0x70, 0x65, 0x65, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x15, 0x0a,
	0x06, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69,
	0x73, 0x45, 0x6e, 0x64, 0x22, 0x3e, 0x0a, 0x11, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x74, 0x74,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x22, 0x38, 0x0a, 0x12, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x74, 0x74, 0x73,
	0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x06, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x22, 0x41,
	0x0a, 0x05, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x2a, 0x35, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x0d, 0x0a,
	0x09, 0x4d, 0x49, 0x43, 0x52, 0x4f, 0x53, 0x4f, 0x46, 0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x56, 0x4f, 0x4c, 0x43, 0x45, 0x4e, 0x47, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x41, 0x4c, 0x49, 0x59, 0x55, 0x4e, 0x10, 0x02, 0x32, 0xe3, 0x01, 0x0a, 0x0a, 0x54, 0x54, 0x53,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x54, 0x65, 0x78, 0x74, 0x54,
	0x6f, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x12, 0x18, 0x2e, 0x74, 0x74, 0x73, 0x2e, 0x54, 0x65,
	0x78, 0x74, 0x54, 0x6f, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x74, 0x74, 0x73, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x53, 0x70,
	0x65, 0x65, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d,
	0x0a, 0x12, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x18, 0x2e, 0x74, 0x74, 0x73, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x54,
	0x6f, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x74, 0x74, 0x73, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x53, 0x70, 0x65, 0x65, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3f, 0x0a,
	0x0a, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x74, 0x74,
	0x73, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x74, 0x74, 0x73, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3a,
	0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x74,
	0x68, 0x69, 0x61, 0x73, 0x58, 0x69, 0x65, 0x2f, 0x67, 0x69, 0x6e, 0x2d, 0x77, 0x65, 0x62, 0x2f,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x74, 0x74, 0x73,
	0x2d, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_tts_proto_rawDescOnce sync.Once
	file_proto_tts_proto_rawDescData = file_proto_tts_proto_rawDesc
)

func file_proto_tts_proto_rawDescGZIP() []byte {
	file_proto_tts_proto_rawDescOnce.Do(func() {
		file_proto_tts_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_tts_proto_rawDescData)
	})
	return file_proto_tts_proto_rawDescData
}

var file_proto_tts_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_tts_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_tts_proto_goTypes = []interface{}{
	(Provider)(0),                // 0: tts.Provider
	(*TextToSpeechRequest)(nil),  // 1: tts.TextToSpeechRequest
	(*TextToSpeechResponse)(nil), // 2: tts.TextToSpeechResponse
	(*VoicesListRequest)(nil),    // 3: tts.VoicesListRequest
	(*VoicesListResponse)(nil),   // 4: tts.VoicesListResponse
	(*Voice)(nil),                // 5: tts.Voice
}
var file_proto_tts_proto_depIdxs = []int32{
	0, // 0: tts.TextToSpeechRequest.provider:type_name -> tts.Provider
	0, // 1: tts.VoicesListRequest.provider:type_name -> tts.Provider
	5, // 2: tts.VoicesListResponse.voices:type_name -> tts.Voice
	1, // 3: tts.TTSService.TextToSpeech:input_type -> tts.TextToSpeechRequest
	1, // 4: tts.TTSService.TextToSpeechStream:input_type -> tts.TextToSpeechRequest
	3, // 5: tts.TTSService.VoicesList:input_type -> tts.VoicesListRequest
	2, // 6: tts.TTSService.TextToSpeech:output_type -> tts.TextToSpeechResponse
	2, // 7: tts.TTSService.TextToSpeechStream:output_type -> tts.TextToSpeechResponse
	4, // 8: tts.TTSService.VoicesList:output_type -> tts.VoicesListResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_tts_proto_init() }
func file_proto_tts_proto_init() {
	if File_proto_tts_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_tts_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextToSpeechRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tts_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextToSpeechResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tts_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoicesListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tts_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoicesListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tts_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Voice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_tts_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_tts_proto_goTypes,
		DependencyIndexes: file_proto_tts_proto_depIdxs,
		EnumInfos:         file_proto_tts_proto_enumTypes,
		MessageInfos:      file_proto_tts_proto_msgTypes,
	}.Build()
	File_proto_tts_proto = out.File
	file_proto_tts_proto_rawDesc = nil
	file_proto_tts_proto_goTypes = nil
	file_proto_tts_proto_depIdxs = nil
}
