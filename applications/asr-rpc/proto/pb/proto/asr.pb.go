// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: proto/asr.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Provider int32

const (
	Provider_VOSK   Provider = 0
	Provider_ALIYUN Provider = 1
)

// Enum value maps for Provider.
var (
	Provider_name = map[int32]string{
		0: "VOSK",
		1: "ALIYUN",
	}
	Provider_value = map[string]int32{
		"VOSK":   0,
		"ALIYUN": 1,
	}
)

func (x Provider) Enum() *Provider {
	p := new(Provider)
	*p = x
	return p
}

func (x Provider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Provider) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_asr_proto_enumTypes[0].Descriptor()
}

func (Provider) Type() protoreflect.EnumType {
	return &file_proto_asr_proto_enumTypes[0]
}

func (x Provider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Provider.Descriptor instead.
func (Provider) EnumDescriptor() ([]byte, []int) {
	return file_proto_asr_proto_rawDescGZIP(), []int{0}
}

// 语音转文本请求
type SpeechToTextRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Provider      Provider               `protobuf:"varint,1,opt,name=provider,proto3,enum=asr.Provider" json:"provider,omitempty"`     // 提供商
	AudioData     []byte                 `protobuf:"bytes,2,opt,name=audio_data,json=audioData,proto3" json:"audio_data,omitempty"`     // 音频数据
	Format        string                 `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`                            // 音频格式，如 mp3, wav
	SampleRate    int32                  `protobuf:"varint,4,opt,name=sample_rate,json=sampleRate,proto3" json:"sample_rate,omitempty"` // 采样率
	Channels      int32                  `protobuf:"varint,5,opt,name=channels,proto3" json:"channels,omitempty"`                       // 声道数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpeechToTextRequest) Reset() {
	*x = SpeechToTextRequest{}
	mi := &file_proto_asr_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpeechToTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeechToTextRequest) ProtoMessage() {}

func (x *SpeechToTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_asr_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeechToTextRequest.ProtoReflect.Descriptor instead.
func (*SpeechToTextRequest) Descriptor() ([]byte, []int) {
	return file_proto_asr_proto_rawDescGZIP(), []int{0}
}

func (x *SpeechToTextRequest) GetProvider() Provider {
	if x != nil {
		return x.Provider
	}
	return Provider_VOSK
}

func (x *SpeechToTextRequest) GetAudioData() []byte {
	if x != nil {
		return x.AudioData
	}
	return nil
}

func (x *SpeechToTextRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *SpeechToTextRequest) GetSampleRate() int32 {
	if x != nil {
		return x.SampleRate
	}
	return 0
}

func (x *SpeechToTextRequest) GetChannels() int32 {
	if x != nil {
		return x.Channels
	}
	return 0
}

// 语音转文本响应
type SpeechToTextResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"` // 要转换的文本
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpeechToTextResponse) Reset() {
	*x = SpeechToTextResponse{}
	mi := &file_proto_asr_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpeechToTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeechToTextResponse) ProtoMessage() {}

func (x *SpeechToTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_asr_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeechToTextResponse.ProtoReflect.Descriptor instead.
func (*SpeechToTextResponse) Descriptor() ([]byte, []int) {
	return file_proto_asr_proto_rawDescGZIP(), []int{1}
}

func (x *SpeechToTextResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type DetectVADRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AudioData     []byte                 `protobuf:"bytes,1,opt,name=audio_data,json=audioData,proto3" json:"audio_data,omitempty"` // 音频数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetectVADRequest) Reset() {
	*x = DetectVADRequest{}
	mi := &file_proto_asr_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetectVADRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectVADRequest) ProtoMessage() {}

func (x *DetectVADRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_asr_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectVADRequest.ProtoReflect.Descriptor instead.
func (*DetectVADRequest) Descriptor() ([]byte, []int) {
	return file_proto_asr_proto_rawDescGZIP(), []int{2}
}

func (x *DetectVADRequest) GetAudioData() []byte {
	if x != nil {
		return x.AudioData
	}
	return nil
}

type DetectVADResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsActivity    bool                   `protobuf:"varint,1,opt,name=is_activity,json=isActivity,proto3" json:"is_activity,omitempty"` // 是否有语音活动
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetectVADResponse) Reset() {
	*x = DetectVADResponse{}
	mi := &file_proto_asr_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetectVADResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectVADResponse) ProtoMessage() {}

func (x *DetectVADResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_asr_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectVADResponse.ProtoReflect.Descriptor instead.
func (*DetectVADResponse) Descriptor() ([]byte, []int) {
	return file_proto_asr_proto_rawDescGZIP(), []int{3}
}

func (x *DetectVADResponse) GetIsActivity() bool {
	if x != nil {
		return x.IsActivity
	}
	return false
}

var File_proto_asr_proto protoreflect.FileDescriptor

const file_proto_asr_proto_rawDesc = "" +
	"\n" +
	"\x0fproto/asr.proto\x12\x03asr\"\xb4\x01\n" +
	"\x13SpeechToTextRequest\x12)\n" +
	"\bprovider\x18\x01 \x01(\x0e2\r.asr.ProviderR\bprovider\x12\x1d\n" +
	"\n" +
	"audio_data\x18\x02 \x01(\fR\taudioData\x12\x16\n" +
	"\x06format\x18\x03 \x01(\tR\x06format\x12\x1f\n" +
	"\vsample_rate\x18\x04 \x01(\x05R\n" +
	"sampleRate\x12\x1a\n" +
	"\bchannels\x18\x05 \x01(\x05R\bchannels\"*\n" +
	"\x14SpeechToTextResponse\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\"1\n" +
	"\x10DetectVADRequest\x12\x1d\n" +
	"\n" +
	"audio_data\x18\x01 \x01(\fR\taudioData\"4\n" +
	"\x11DetectVADResponse\x12\x1f\n" +
	"\vis_activity\x18\x01 \x01(\bR\n" +
	"isActivity* \n" +
	"\bProvider\x12\b\n" +
	"\x04VOSK\x10\x00\x12\n" +
	"\n" +
	"\x06ALIYUN\x10\x012\x91\x01\n" +
	"\n" +
	"ASRService\x12E\n" +
	"\fSpeechToText\x12\x18.asr.SpeechToTextRequest\x1a\x19.asr.SpeechToTextResponse\"\x00\x12<\n" +
	"\tDetectVAD\x12\x15.asr.DetectVADRequest\x1a\x16.asr.DetectVADResponse\"\x00B:Z8github.com/mathiasXie/gin-web/applications/asr-rpc/protob\x06proto3"

var (
	file_proto_asr_proto_rawDescOnce sync.Once
	file_proto_asr_proto_rawDescData []byte
)

func file_proto_asr_proto_rawDescGZIP() []byte {
	file_proto_asr_proto_rawDescOnce.Do(func() {
		file_proto_asr_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_asr_proto_rawDesc), len(file_proto_asr_proto_rawDesc)))
	})
	return file_proto_asr_proto_rawDescData
}

var file_proto_asr_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_asr_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_asr_proto_goTypes = []any{
	(Provider)(0),                // 0: asr.Provider
	(*SpeechToTextRequest)(nil),  // 1: asr.SpeechToTextRequest
	(*SpeechToTextResponse)(nil), // 2: asr.SpeechToTextResponse
	(*DetectVADRequest)(nil),     // 3: asr.DetectVADRequest
	(*DetectVADResponse)(nil),    // 4: asr.DetectVADResponse
}
var file_proto_asr_proto_depIdxs = []int32{
	0, // 0: asr.SpeechToTextRequest.provider:type_name -> asr.Provider
	1, // 1: asr.ASRService.SpeechToText:input_type -> asr.SpeechToTextRequest
	3, // 2: asr.ASRService.DetectVAD:input_type -> asr.DetectVADRequest
	2, // 3: asr.ASRService.SpeechToText:output_type -> asr.SpeechToTextResponse
	4, // 4: asr.ASRService.DetectVAD:output_type -> asr.DetectVADResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_asr_proto_init() }
func file_proto_asr_proto_init() {
	if File_proto_asr_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_asr_proto_rawDesc), len(file_proto_asr_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_asr_proto_goTypes,
		DependencyIndexes: file_proto_asr_proto_depIdxs,
		EnumInfos:         file_proto_asr_proto_enumTypes,
		MessageInfos:      file_proto_asr_proto_msgTypes,
	}.Build()
	File_proto_asr_proto = out.File
	file_proto_asr_proto_goTypes = nil
	file_proto_asr_proto_depIdxs = nil
}
